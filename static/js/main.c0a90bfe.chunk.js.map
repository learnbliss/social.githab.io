{"version":3,"sources":["serviceWorker.js","components/NavBar/SideBar/SideBar.js","components/NavBar/SideBar/SideBarContainer.js","components/NavBar/Navbar.js","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/HiApp/HiApp.js","hoc/withSuspense.js","App.js","AppContainer.js","hoc/withErrorBoundaries.js","index.js","reducers/authReducer.ts","components/common/Preloader/Preloader.js","reducers/appReducer.ts","components/Header/Header.module.scss","components/NavBar/SideBar/SideBar.module.scss","api/api.js","reducers/profileReducer.ts","redux/redux.tsx","reducers/messagesReducer.ts","components/NavBar/NavBar.module.scss","utils/Helper/reducer-helper.js","reducers/UsersReducer.ts","components/common/Preloader/Preloader.module.scss","assets/img/loader.svg","logo.svg"],"names":["Boolean","window","location","hostname","match","SideBar","props","dialogs","className","styles","sideBarWrapper","slice","map","item","key","id","sideBar","src","avatar","alt","name","SideBarContainer","connect","state","messagesPage","NavBar","nav","to","activeClassName","active","Header","header","logo","isFetching","Preloader","loginBlock","isAuth","enter","login","onClick","logoutThunk","HeaderContainer","this","Component","auth","HiApp","style","display","height","justifyContent","alignContent","withSuspens","fallback","DialogsContainer","React","lazy","ProfileContainer","UsersContainer","LoginContainer","News","Music","Settings","App","exact","path","render","AppContainer","initializedAppThunk","initialized","compose","app","hasError","error","ReactDOM","StrictMode","basename","process","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","SET_AUTH_USER_DATA","FETCH_DATA","SET_CAPTHA","initialState","email","captchaUrl","authReducer","action","type","payload","setAuthUserDataAC","isFetchingTrueAC","boolean","authMeThunk","dispatch","a","authAPI","authMe","data","resultCode","loginThunk","password","rememberMe","captcha","loginMe","getCaptchaUrlThunk","messageError","messages","length","stopSubmit","_error","logoutMe","securityAPI","getCaptchaUrl","url","preLoader","preloader","INITIALIZED_SUCCESS","appReducer","promise","Promise","all","module","exports","instance","Axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","response","setFollow","userId","post","setUnfollow","delete","profileAPI","getProfile","paramsId","getStatus","updateStatus","status","put","savePhoto","file","formData","FormData","append","updateProfileData","profile","prefix","ADD_POST_PROFILE","SET_USER_PROFILE","SET_USER_STATUS","DELETE_POST_PROFILE","UPDATE_PHOTO","posts","likeCounts","addPostAC","setUserStatusAC","fetchingAC","getUserProfileThunk","profileId","getStatusThunk","updateStatusThunk","savePhotoThunk","getState","photo","photos","updateProfileThunk","toLowerCase","contacts","profileReducer","newPost","filter","postId","rootReducers","combineReducers","messagesReducer","profilePage","userPage","UsersReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunk","ADD_MESSAGE_DIALOG","addMessageAC","newMessage","updateObjectInArray","arr","actionItemId","objPropName","newObjProp","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalItemsCount","followingInProgress","followed","totalCount","isProgress","followAC","unfollowAC","setCurrentPageAC","toggleIsFetchingAC","followingInProgressAC","getUsersThunk","log","items","_followUnfollowFlow","apiMethod","actionCreator","followThunk","bind","unfollowThunk","getUsersSelector","getPageSizeSelector","createSelector","u","getTotalUsersCountSelector","getCurrentPageSelector","getIsFetchingSelector","getFollowingInProgressSelector"],"mappings":"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","file":"static/js/main.c0a90bfe.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport styles from './SideBar.module.scss'\n\nconst SideBar = props => {\n    const {dialogs} = props;\n    return (\n        <div className={styles.sideBarWrapper}>\n            {dialogs.slice(0, 3).map((item) => {\n                return (\n                    <div key={item.id} className={styles.sideBar}>\n                        <img src={item.avatar} alt='avatar'/>\n                        <div>{item.name}</div>\n                    </div>\n                )\n            })}\n        </div>\n    );\n};\n\nexport default SideBar;","// import React from 'react';\nimport SideBar from './SideBar';\nimport {connect} from 'react-redux';\n\n// const SideBarContainer = props => {\n//     return (\n//         <ContextStore.Consumer>\n//             {(store) => {\n//                 return(\n//                     <SideBar dialogs={store.getState().messagesPage.dialogs}/>\n//                 )\n//             }}\n//         </ContextStore.Consumer>\n//     );\n// };\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogs: state.messagesPage.dialogs,\n    }\n};\n\nconst SideBarContainer = connect(mapStateToProps)(SideBar);\n\nexport default SideBarContainer;","import React from 'react';\nimport styles from './NavBar.module.scss'\nimport {NavLink} from 'react-router-dom';\nimport SideBarContainer from './SideBar/SideBarContainer';\n\nconst NavBar = (props) => {\n    return (\n        <nav className={styles.nav}>\n            <ul>\n                <li className={styles.item}><NavLink to='/profile' activeClassName={styles.active}>Profile</NavLink></li>\n                <li className={styles.item}><NavLink to='/dialogs' activeClassName={styles.active}>Messages</NavLink></li>\n                <li className={styles.item}><NavLink to='/users' activeClassName={styles.active}>Users</NavLink></li>\n                <li className={styles.item}><NavLink to='/news' activeClassName={styles.active}>News</NavLink></li>\n                <li className={styles.item}><NavLink to='/music' activeClassName={styles.active}>Music</NavLink></li>\n                <li className={styles.item}><NavLink to='/settings' activeClassName={styles.active}>Settings</NavLink></li>\n            </ul>\n            <div className={styles.sideBar}>\n                <span>Friends</span>\n                <SideBarContainer/>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;","import React from 'react';\nimport logo from '../../logo.svg';\nimport styles from './Header.module.scss'\nimport {NavLink} from \"react-router-dom\";\nimport Preloader from \"../common/Preloader/Preloader\";\n\ntype PropTypes = {\n    isFetching: boolean,\n    isAuth: boolean,\n    login: string | null,\n    logoutThunk: () => void,\n}\n\nconst Header: React.FC<PropTypes> = (props) => {\n    return (\n        <header className={styles.header}>\n            <NavLink to={'/'}><img src={logo} alt='logo'/></NavLink>\n            {props.isFetching && <Preloader/>}\n            <div className={styles.loginBlock}>\n                {props.isAuth ?\n                    <div>\n                        <span className={styles.enter}>Вы вошли как:</span>\n                        {` ${props.login} `}\n                        <button onClick={props.logoutThunk}>Logout</button>\n                    </div>\n                    : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import React, {Component} from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logoutThunk} from \"../../reducers/authReducer\";\nimport {stateType} from \"../../redux/redux\";\n\ntype mapStateToPropsType = {\n    login: string | null,\n    isAuth: boolean,\n    isFetching: boolean,\n}\n\ntype mapDispatchToPropsType = {\n    logoutThunk: () => void\n}\n\ntype ProptTypes = mapStateToPropsType & mapDispatchToPropsType;\n\nclass HeaderContainer extends Component<ProptTypes> {\n\n    // componentDidMount() {\n    //     this.props.authMeThunk();\n    //     // this.props.isFetchingTrueAC(true);\n    //     //     API.authMe().then(data => {\n    //     //         if (data.resultCode === 0) {\n    //     //             const {id, email, login} = data.data;\n    //     //             this.props.setAuthUserDataAC(id, email, login)\n    //     //         }\n    //     //     })\n    // }\n\n    render() {\n        return (\n            <Header {...this.props}/>\n        );\n    }\n}\n\nconst mapStateToProps = (state: stateType) => {\n    return {\n        login: state.auth.login,\n        isAuth: state.auth.isAuth,\n        isFetching: state.auth.isFetching,\n    }\n};\n\nexport default connect<mapStateToPropsType, mapDispatchToPropsType, null, stateType>(mapStateToProps, {\n    // authMeThunk,\n    logoutThunk,\n})(HeaderContainer);","import React from 'react';\n\nconst HiApp = () => {\n    return (\n        <div style={{\n            display: 'grid',\n            height: '100%',\n            justifyContent: 'center',\n            alignContent: 'center',\n        }}>\n            приветики, это приветствие\n        </div>\n    );\n};\n\nexport default HiApp;","import React, {Suspense} from 'react';\n\nexport const withSuspens = (Component) => {\n    return (props) => {\n        return (\n            <Suspense fallback={<div>Загрузка...</div>}>\n                <Component {...props}/>\n            </Suspense>\n        );\n    };\n};","import React from 'react';\nimport './App.scss';\nimport NavBar from \"./components/NavBar/Navbar\";\nimport {Route, Switch} from \"react-router-dom\";\n// import News from \"./components/News/News\";\n// import Music from \"./components/Music/Music\";\n// import Settings from \"./components/Settings/Settings\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// import UsersContainer from \"./components/Users/UsersContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\n// import LoginContainer from \"./components/Login/LoginContainer\";\nimport HiApp from \"./components/HiApp/HiApp\";\nimport {withSuspens} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst LoginContainer = React.lazy(() => import('./components/Login/LoginContainer'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\n\nconst App = (props) => {\n    return (\n        <div className=\"App\">\n            <HeaderContainer/>\n            <NavBar/>\n            <div className=\"app-wrapper-content\">\n                <Switch>\n                    <Route exact path='/' render={() => {\n                        return <HiApp/>\n                    }}/>\n                    <Route path='/dialogs' render={withSuspens(DialogsContainer)}/>\n                    <Route path='/profile/:id?' render={withSuspens(ProfileContainer)}/>\n                    <Route path='/users' render={withSuspens(UsersContainer)}/>\n                    <Route path='/news' render={withSuspens(News)}/>\n                    <Route path='/music' render={withSuspens(Music)}/>\n                    <Route path='/settings' render={withSuspens(Settings)}/>\n                    <Route path='/login' render={withSuspens(LoginContainer)}/>\n                    <Route path='*' render={() => {\n                        return <div>404</div>\n                    }}/>\n                </Switch>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {initializedAppThunk} from \"./reducers/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport App from \"./App\";\nimport {WithErrorBoundaries} from \"./hoc/withErrorBoundaries\";\n\nclass AppContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.initializedAppThunk();\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <App/>\n        );\n    }\n}\n\nexport default compose(\n    connect((state) => {\n        return {\n            initialized: state.app.initialized,\n        }\n    }, {\n        initializedAppThunk,\n    }),\n    WithErrorBoundaries,\n)(AppContainer);","import React from 'react';\n\nexport const WithErrorBoundaries = (Component) => {\n    class WidthComponent extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {hasError: false};\n        }\n\n        static getDerivedStateFromError(error) {\n            return {hasError: true};\n        }\n\n        render() {\n            if (this.state.hasError) {\n                return <h1>Something went wrong.</h1>;\n            }\n            return (\n                <Component {...this.props}/>\n            );\n        }\n    }\n    return (WidthComponent);\n};","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/redux\";\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport AppContainer from \"./AppContainer\";\n\n// const reRenderThree = (state) => {\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n// };\n\n// reRenderThree(store.getState());\n//\n// store.subscribe(() => {\n//     reRenderThree(store.getState())\n// });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {authAPI, securityAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst prefix = 'AUTH_';\n\nconst SET_AUTH_USER_DATA = `${prefix}SET_AUTH_USER_DATA`;\nconst FETCH_DATA = `${prefix}FETCH_DATA`;\nconst SET_CAPTHA = `${prefix}SET_CAPTHA`;\n\ntype initialStateType = {\n    id: null | number,\n    email: null | string,\n    login: null | string,\n    isAuth: boolean,\n    isFetching: boolean,\n    captchaUrl: null | string,\n}\n\nconst initialState: initialStateType = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    isFetching: false,\n    captchaUrl: null,\n};\n\nexport default function authReducer(state = initialState, action: any): initialStateType {\n    switch (action.type) {\n        case SET_AUTH_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n                isFetching: false,\n            };\n        case FETCH_DATA:\n            return {\n                ...state,\n                isFetching: action.payload.isFetching,\n            };\n        case SET_CAPTHA:\n            return {\n                ...state,\n                captchaUrl: action.payload.captchaUrl,\n            };\n        default:\n            return state\n    }\n}\n\ntype setAuthUserDataACPayloadType = {\n    id: string | null,\n    email: string | null,\n    login: string | null,\n    isAuth: boolean,\n}\ntype setAuthUserDataACType = {\n    type: typeof SET_AUTH_USER_DATA,\n    payload: setAuthUserDataACPayloadType\n}\n\nexport const setAuthUserDataAC = (id: string | null, email: string | null, login: string | null, isAuth: boolean): setAuthUserDataACType => {\n    return {\n        type: SET_AUTH_USER_DATA,\n        payload: {\n            id, email, login, isAuth,\n        }\n    }\n};\n\ntype isFetchingTrueACPayloadType = {\n    isFetching: boolean,\n}\n\ntype isFetchingTrueACType = {\n    type: typeof FETCH_DATA,\n    payload: isFetchingTrueACPayloadType\n}\n\nexport const isFetchingTrueAC = (boolean: boolean): isFetchingTrueACType => {\n    return {\n        type: FETCH_DATA,\n        payload: {\n            isFetching: boolean\n        }\n    }\n};\n\ntype setCaptchaUrlACPayloadType = {\n    captchaUrl: string\n}\n\ntype setCaptchaUrlACType = {\n    type: typeof SET_CAPTHA,\n        payload: setCaptchaUrlACPayloadType\n}\n\nexport const setCaptchaUrlAC = (captchaUrl: string) => {\n    return {\n        type: SET_CAPTHA,\n        payload: {\n            captchaUrl,\n        },\n    }\n};\n\n// export const authMeThunk = () => {\n//     return (dispatch, getState) => {\n//         dispatch(isFetchingTrueAC(true));\n//         return authAPI.authMe().then(data => {\n//             if (data.resultCode === 0) {\n//                 const {id, email, login} = data.data;\n//                 dispatch(setAuthUserDataAC(id, email, login, true,))\n//             }\n//         });\n//     }\n// };\nexport const authMeThunk = () => {\n    return async (dispatch: any) => {\n        dispatch(isFetchingTrueAC(true));\n        const data = await authAPI.authMe();\n        if (data.resultCode === 0) {\n            const {id, email, login} = data.data;\n            dispatch(setAuthUserDataAC(id, email, login, true,))\n        }\n        dispatch(isFetchingTrueAC(false));\n        return data;\n    }\n};\n\n// export const loginThunk = (email, password, rememberMe) => {\n//     return (dispatch, getState) => {\n//         authAPI.loginMe(email, password, rememberMe, true).then(data => {\n//             if (data.resultCode === 0) {\n//                 dispatch(authMeThunk())\n//             } else {\n//                 let messageError = data.messages.length > 0 ? data.messages[0] : 'Some error';\n//                 dispatch(stopSubmit('login', {\n//                     _error: messageError,\n//                 }))\n//             }\n//         })\n//     }\n// };\nexport const loginThunk = (email: string, password: string, rememberMe: boolean, captcha: string) => {\n    return async (dispatch: any) => {\n        const data = await authAPI.loginMe(email, password, rememberMe, captcha,);\n        if (data.resultCode === 0) {\n            dispatch(authMeThunk())\n        } else {\n            if (data.resultCode === 10) {\n                dispatch(getCaptchaUrlThunk())\n            }\n            let messageError = data.messages.length > 0 ? data.messages[0] : 'Some error';\n            dispatch(stopSubmit('login', {\n                _error: messageError,\n            }))\n        }\n    }\n};\n\n// export const logoutThunk = () => {\n//     return (dispatch, getState) => {\n//         authAPI.logoutMe().then(data => {\n//             if (data.resultCode === 0) {\n//                 dispatch(setAuthUserDataAC(null, null, null, false))\n//             }\n//         })\n//     }\n// };\nexport const logoutThunk = () => {\n    return async (dispatch: any) => {\n        try {\n            const data = await authAPI.logoutMe();\n            if (data.resultCode === 0) {\n                dispatch(setAuthUserDataAC(null, null, null, false))\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }\n};\n\nexport const getCaptchaUrlThunk = () => {\n    return async (dispatch: any) => {\n        try {\n            const data = await securityAPI.getCaptchaUrl();\n            dispatch(setCaptchaUrlAC(data.url))\n        } catch (e) {\n            console.error(e)\n        }\n    }\n};","import React from 'react';\nimport styles from \"./Preloader.module.scss\";\nimport preloader from '../../../assets/img/loader.svg'\n\nconst Preloader = props => {\n    return (\n        <div className={styles.preLoader}>\n            <img src={preloader} alt='preloader'/>\n        </div>\n    );\n};\n\nexport default Preloader;","import {authMeThunk} from \"./authReducer\";\n\nconst prefix = 'APP_';\n\nconst INITIALIZED_SUCCESS = `${prefix}INITIALIZED_SUCCESS`;\n\nexport type initialStateType = {\n    initialized: boolean,\n}\n\nconst initialState: initialStateType = {\n    initialized: false,\n};\n\nexport default function appReducer(state = initialState, action: any): initialStateType {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true,\n            };\n        default:\n            return state\n    }\n}\n\ntype initializedSuccessACType = {\n    type: typeof INITIALIZED_SUCCESS,\n}\n\nexport const initializedSuccessAC = (): initializedSuccessACType => {\n    return {\n        type: INITIALIZED_SUCCESS,\n    }\n};\n\nexport const initializedAppThunk = () => {\n    return (dispatch: any) => {\n        let promise = dispatch(authMeThunk());\n        Promise.all([promise]).then(() => {\n            dispatch(initializedSuccessAC())\n        })\n    }\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"loginBlock\":\"Header_loginBlock__3g_eP\",\"enter\":\"Header_enter__2ni9x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBarWrapper\":\"SideBar_sideBarWrapper__3qIql\",\"sideBar\":\"SideBar_sideBar__3jBF7\"};","import Axios from \"axios\";\n\nconst instance = Axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": '3dec519a-9ed9-4d00-a8c6-4541a128800e',\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage, pageSize) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,)\n            .then((response) => {\n                return response.data\n            })\n    },\n\n    setFollow(userId) {\n        return instance.post(`https://social-network.samuraijs.com/api/1.0/follow/${userId}`)\n            .then(response => response.data)\n    },\n\n    setUnfollow(userId) {\n        return instance.delete(`https://social-network.samuraijs.com/api/1.0/follow/${userId}`)\n            .then(response => response.data)\n    },\n};\n\nexport const authAPI = {\n    authMe() {\n        return instance.get(`auth/me`)\n            .then(response => response.data)\n    },\n    loginMe(email, password, rememberMe = false, captcha = null) {\n        return instance.post('auth/login', {email, password, rememberMe, captcha})\n            .then(response => response.data)\n    },\n    logoutMe() {\n        return instance.delete('auth/login')\n            .then(response => response.data)\n    },\n};\n\nexport const profileAPI = {\n    getProfile(paramsId) {\n        return instance.get(`profile/${paramsId}`)\n            .then(response => response.data)\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/${userId || 2}`)\n            .then(response => response.data)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status/`, {status: status})\n            .then(response => response.data)\n    },\n    savePhoto(file) {\n        const formData = new FormData();\n        formData.append('image', file);\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n            .then(response => response.data)\n    },\n    updateProfileData(profile) {\n        return instance.put(`profile`, profile)\n            .then(response => response.data)\n    },\n};\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`)\n            .then(response => response.data)\n    },\n};","import {profileAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport { photosType, postsType, profileType } from \"../types/types\";\n\n// action constants\nconst prefix = 'PROFILE_';\n\nconst ADD_POST_PROFILE = `${prefix}ADD_POST_PROFILE`;\nconst SET_USER_PROFILE = `${prefix}SET_USER_PROFILE`;\nconst SET_USER_STATUS = `${prefix}SET_USER_STATUS`;\nconst DELETE_POST_PROFILE = `${prefix}DELETE_POST_PROFILE`;\nconst UPDATE_PHOTO = `${prefix}UPDATE_PHOTO`;\nconst FETCH_DATA = `${prefix}FETCH_DATA`;\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'My post 1', likeCounts: 3},\n        {id: 2, message: 'My secondary post', likeCounts: 5},\n        {id: 3, message: 'My third post', likeCounts: 25},\n    ] as Array<postsType>,\n    profile: null as profileType | null,\n    status: 'Ваш статус' as string,\n    isFetching: false as boolean,\n};\n\ntype initialStateType = typeof initialState;\n\n//reducer\n\nconst profileReducer = (state = initialState, action: any): initialStateType => {\n\n    switch (action.type) {\n\n        case ADD_POST_PROFILE:\n            let newPost = {\n                id: state.posts.length + 1,\n                message: action.payload.post,\n                likeCounts: 0,\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n            };\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.payload.profile,\n            };\n        case SET_USER_STATUS:\n            return {\n                ...state,\n                status: action.payload.status\n            };\n        case DELETE_POST_PROFILE:\n            return {\n                ...state,\n                posts: state.posts.filter(post => {\n                    return post.id !== action.payload.postId\n                })\n            };\n        case UPDATE_PHOTO:\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.payload.photo} as profileType,\n                isFetching: action.payload.isFetching,\n            };\n        case FETCH_DATA:\n            return {\n                ...state,\n                isFetching: action.payload.isFetching,\n            };\n        default:\n            return state\n    }\n};\n\n//action creator\n\ntype addPostACType = {\n    type: typeof ADD_POST_PROFILE,\n    payload: {\n        post: postsType,\n    }\n}\n\nexport const addPostAC = (post: postsType): addPostACType => {\n    return {\n        type: ADD_POST_PROFILE,\n        payload: {\n            post,\n        }\n\n    }\n};\n\ntype deletePostACType = {\n    type: typeof DELETE_POST_PROFILE,\n    payload: {\n        postId: number,\n    },\n}\n\nexport const deletePostAC = (postId: number): deletePostACType => {\n    return {\n        type: DELETE_POST_PROFILE,\n        payload: {\n            postId,\n        },\n    }\n};\n\ntype setUserProfileACType = {\n    type: typeof SET_USER_PROFILE,\n    payload: {\n        profile: profileType,\n    }\n}\n\nexport const setUserProfileAC = (profile: profileType): setUserProfileACType => {\n    return {\n        type: SET_USER_PROFILE,\n        payload: {\n            profile,\n        }\n    }\n};\n\ntype setUserStatusACType = {\n    type: typeof SET_USER_STATUS,\n    payload: {\n        status: string,\n    },\n}\n\nexport const setUserStatusAC = (status: string): setUserStatusACType => {\n    return {\n        type: SET_USER_STATUS,\n        payload: {\n            status,\n        },\n    }\n};\n\ntype photoACType = {\n    type: typeof UPDATE_PHOTO,\n    payload: {\n        photo: photosType,\n    },\n}\n\nexport const photoAC = (photo: photosType): photoACType => {\n    return {\n        type: UPDATE_PHOTO,\n        payload: {\n            photo\n        },\n    }\n};\n\ntype fetchingACType = {\n    type: typeof FETCH_DATA,\n    payload: {\n        isFetching: boolean,\n    },\n}\n\nexport const fetchingAC = (boolean: boolean): fetchingACType => {\n    return {\n        type: FETCH_DATA,\n        payload: {\n            isFetching: boolean,\n        },\n    }\n};\n\n//middleware\n\n// export const getUserProfileThunk = (profileId) => {\n//     return (dispatch: any) => {\n//         profileAPI.getProfile(profileId).then(data => {\n//             dispatch(setUserProfileAC(data))\n//         })\n//     }\n// };\nexport const getUserProfileThunk = (profileId: number) => {\n    return async (dispatch: any) => {\n        try {\n            const data = await profileAPI.getProfile(profileId);\n            dispatch(setUserProfileAC(data))\n        } catch (e) {\n            console.error(e)\n        }\n    }\n};\n\n// export const getStatusThunk = (userId) => {\n//     return (dispatch: any) => {\n//         profileAPI.getStatus(userId).then(data => {\n//             if (data) {\n//                 dispatch(setUserStatusAC(data))\n//             }\n//         })\n//     }\n// };\nexport const getStatusThunk = (userId: number) => {\n    return async (dispatch: any) => {\n        try {\n            const data = await profileAPI.getStatus(userId);\n            if (data) {\n                dispatch(setUserStatusAC(data))\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }\n};\n\n// export const updateStatusThunk = (status) => {\n//     return (dispatch: any) => {\n//         profileAPI.updateStatus(status).then(data => {\n//             if (data.resultCode === 0) {\n//                 dispatch(setUserStatusAC(status));\n//             }\n//         })\n//     }\n// };\nexport const updateStatusThunk = (status: string) => {\n    return async (dispatch: any) => {\n        try {\n            const data = await profileAPI.updateStatus(status);\n            if (data.resultCode === 0) {\n                dispatch(setUserStatusAC(status));\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }\n};\n\nexport const savePhotoThunk = (file: any) => {\n    return async (dispatch: any, getState: any) => {\n        try {\n            dispatch(fetchingAC(true));\n            const data = await profileAPI.savePhoto(file);\n            if (data.resultCode === 0) {\n                dispatch(photoAC(data.data.photos));\n                dispatch(fetchingAC(false));\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }\n};\n\nexport const updateProfileThunk = (profile: profileType) => {\n    return async (dispatch: any, getState: any) => {\n        try {\n            const data = await profileAPI.updateProfileData(profile);\n            if (data.resultCode === 0) {\n                dispatch(getUserProfileThunk(getState().auth.id));\n            } else {\n                let key = data.messages[0].match(/Contacts->(\\w+)/)[1].toLowerCase();\n                dispatch(stopSubmit('editProfile', {\n                    contacts: {[key]: data.messages[0]},\n                    // _error: data.messages[0],\n                }));\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }\n};\n\nexport default profileReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport messagesReducer from \"../reducers/messagesReducer\";\nimport profileReducer from \"../reducers/profileReducer\";\nimport UsersReducer from \"../reducers/UsersReducer\";\nimport authReducer from \"../reducers/authReducer\";\nimport thunk from \"redux-thunk\";\nimport {reducer as formReducer} from 'redux-form'\nimport appReducer from \"../reducers/appReducer\";\n\nlet rootReducers = combineReducers({\n    messagesPage: messagesReducer,\n    profilePage: profileReducer,\n    userPage: UsersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer,\n});\n\ntype rootReducersType = typeof rootReducers;\nexport type stateType = ReturnType<rootReducersType>;\n\n// const store = createStore(\n//    reducers, {},\n// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//  );\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducers,\n    composeEnhancers(\n        applyMiddleware(thunk),\n    )\n);\n\nexport default store;","import {dialogsType, messagesType} from \"../types/types\";\n\nconst prefix = 'MESSAGES_';\n\nconst ADD_MESSAGE_DIALOG = `${prefix}ADD_MESSAGE_DIALOG`;\n\nlet initialState = {\n    messages: [\n        {id: 1, message: 'Привет как дела'},\n        {id: 2, message: 'У меня нормич'},\n        {id: 3, message: 'А у тебя?'},\n        {id: 4, message: 'все по феншую'},\n    ] as Array<messagesType>,\n    dialogs: [\n        {\n            id: 1,\n            name: 'Andre',\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTLCMHxa7MfSl3vH9hQDDgUwFpORGANIRLpP2t8Pax3IqljrYHZ&usqp=CAU'\n        },\n        {\n            id: 2,\n            name: 'Dimka',\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTtYsA5m3xp8EdW0R1vT5Oein32vpgXbFZ6NkB23lbuDxjZwedh&usqp=CAU'\n        },\n        {\n            id: 3,\n            name: 'Nikolay',\n            avatar: 'https://i.ytimg.com/vi/WJMp9NtK4io/hqdefault.jpg'\n        },\n        {\n            id: 4,\n            name: 'Arseniy',\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcShIt3l2-355Sf6La3bZUy7lvRj6vDzjhWQfW1uNHWYxwRNcwzY&usqp=CAU'\n        },\n    ] as Array<dialogsType>,\n};\n\ntype initialStateType = typeof initialState;\n\nconst messagesReducer = (state = initialState, action: any): initialStateType => {\n\n    switch (action.type) {\n        case ADD_MESSAGE_DIALOG: {\n            let newMessage = {id: state.messages.length + 1, message: action.payload.message,};\n            return {\n                ...state,\n                messages: [...state.messages, newMessage],\n            }\n        }\n        default:\n            return state\n    }\n};\n\ntype addMessageACType = {\n    type: typeof ADD_MESSAGE_DIALOG,\n    payload: { message: string }\n\n}\n\nexport const addMessageAC = (message: string): addMessageACType => {\n    return {\n        type: ADD_MESSAGE_DIALOG,\n        payload: {\n            message\n        }\n    }\n};\n\nexport default messagesReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__2RS83\",\"item\":\"NavBar_item__WEh28\",\"active\":\"NavBar_active__3Tb7-\",\"sideBar\":\"NavBar_sideBar__FBsiD\"};","export const updateObjectInArray = (arr, actionItemId, objPropName, newObjProp) => {\n   return arr.map((item) => {\n        if (item[objPropName] === actionItemId) {\n            return {...item, ...newObjProp,}\n        }\n        return item\n    })\n};","import {usersAPI} from \"../api/api\";\nimport {createSelector} from 'reselect'\nimport {updateObjectInArray} from \"../utils/Helper/reducer-helper\";\nimport {followingInProgressType, usersType} from \"../types/types\";\nimport {stateType} from \"../redux/redux\";\nimport {Action, Dispatch} from \"redux\";\nimport {ThunkAction} from \"redux-thunk\";\n\nconst prefix = 'USERS_';\n\nconst FOLLOW = `${prefix}FOLLOW`;\nconst UNFOLLOW = `${prefix}UNFOLLOW`;\nconst SET_USERS = `${prefix}SET_USERS`;\nconst SET_CURRENT_PAGE = `${prefix}SET_CURRENT_PAGE`;\nconst SET_TOTAL_COUNT = `${prefix}SET_TOTAL_COUNT`;\nconst TOGGLE_IS_FETCHING = `${prefix}TOGGLE_IS_FETCHING`;\nconst TOGGLE_IS_FOLLOWING_PROGRESS = `${prefix}TOGGLE_IS_FOLLOWING_PROGRESS`;\n\nconst initialState = {\n    users: [] as Array<usersType>,\n    pageSize: 6 as number,\n    totalItemsCount: 0 as number,\n    currentPage: 1 as number,\n    isFetching: false as boolean,\n    followingInProgress: [] as followingInProgressType, // array of users id\n};\n\ntype initialStateType = typeof initialState;\ntype ActionTypes = followACType | unfollowACType | setUsersACType | setCurrentPageACType | setTotalCountACType | toggleIsFetchingACType | followingInProgressACType;\n\nexport default function UsersReducer(state = initialState, action: any): initialStateType {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.payload.userId, 'id', {followed: true})\n                // users: state.users.map((user) => {\n                //     if (user.id === action.payload.userId) {\n                //         return {...user, followed: true,}\n                //     }\n                //     return user\n                // })\n            };\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.payload.userId, 'id', {followed: false})\n                // users: state.users.map((user) => {\n                //     if (user.id === action.payload.userId) {\n                //         return {...user, followed: false,}\n                //     }\n                //     return user\n                // })\n            };\n        case SET_USERS:\n            return {\n                ...state,\n                users: action.payload.users,\n            };\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.payload.currentPage,\n            };\n        case SET_TOTAL_COUNT:\n            return {\n                ...state,\n                totalItemsCount: action.payload.totalCount,\n            };\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.payload.isFetching,\n            };\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.payload.isProgress ?\n                    [...state.followingInProgress, action.payload.userId]\n                    : [state.followingInProgress.filter(userId => {\n                        return userId !== action.payload.userId\n                    })]\n            };\n        default:\n            return state\n    }\n}\n\ntype followACType = {\n    type: typeof FOLLOW,\n    payload: {\n        userId: number,\n    },\n}\n\nexport const followAC = (userId: number): followACType => {\n    return {\n        type: FOLLOW,\n        payload: {\n            userId,\n        },\n    }\n};\n\ntype unfollowACType = {\n    type: typeof UNFOLLOW,\n    payload: {\n        userId: number,\n    },\n}\n\nexport const unfollowAC = (userId: number): unfollowACType => {\n    return {\n        type: UNFOLLOW,\n        payload: {\n            userId,\n        },\n    }\n};\n\ntype setUsersACType = {\n    type: typeof SET_USERS,\n    payload: {\n        users: Array<usersType>,\n    },\n}\n\nexport const setUsersAC = (users: Array<usersType>): setUsersACType => {\n    return {\n        type: SET_USERS,\n        payload: {\n            users,\n        },\n    }\n};\n\ntype setCurrentPageACType = {\n    type: typeof SET_CURRENT_PAGE,\n    payload: {\n        currentPage: number,\n    }\n}\n\nexport const setCurrentPageAC = (currentPage: number): setCurrentPageACType => {\n    return {\n        type: SET_CURRENT_PAGE,\n        payload: {\n            currentPage\n        }\n    }\n};\n\ntype setTotalCountACType = {\n    type: typeof SET_TOTAL_COUNT,\n    payload: {\n        totalCount: number,\n    }\n}\n\nexport const setTotalCountAC = (totalCount: number): setTotalCountACType => {\n    return {\n        type: SET_TOTAL_COUNT,\n        payload: {\n            totalCount\n        }\n    }\n};\n\ntype toggleIsFetchingACType = {\n    type: typeof TOGGLE_IS_FETCHING,\n    payload: {\n        isFetching: boolean,\n    }\n}\n\nexport const toggleIsFetchingAC = (isFetching: boolean): toggleIsFetchingACType => {\n    return {\n        type: TOGGLE_IS_FETCHING,\n        payload: {\n            isFetching,\n        }\n    }\n};\n\ntype followingInProgressACType = {\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS,\n    payload: {\n        isProgress: boolean,\n        userId: number,\n    }\n}\n\nexport const followingInProgressAC = (isProgress: boolean, userId: number): followingInProgressACType => {\n    return {\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\n        payload: {\n            isProgress,\n            userId,\n        }\n    }\n};\n\n//middleware\ntype GetStateType = () => stateType;\ntype DispatchType = Dispatch<ActionTypes>\ntype ThunkType = ThunkAction<Promise<void>, stateType, unknown, ActionTypes>;\n\n// export const getUsersThunk = (currentPage, pageSize) => {\n//     return (dispatch, getState) => {\n//         dispatch(toggleIsFetchingAC(true));\n//         dispatch(setCurrentPageAC(currentPage));\n//         usersAPI.getUsers(currentPage, pageSize).then((data) => {\n//             dispatch(toggleIsFetchingAC(false));\n//             dispatch(setUsersAC(data.items));\n//             if (getState().userPage.totalItemsCount === 0) {\n//                 dispatch(setTotalCountAC(data.totalCount));\n//             }\n//         });\n//     }\n// };\nexport const getUsersThunk = (currentPage: number, pageSize: number) => {\n    return async (dispatch: DispatchType, getState: GetStateType) => {\n        try {\n            dispatch(toggleIsFetchingAC(true));\n            dispatch(setCurrentPageAC(currentPage));\n            const data = await usersAPI.getUsers(currentPage, pageSize);\n            console.log('data: ', data);\n            dispatch(toggleIsFetchingAC(false));\n            dispatch(setUsersAC(data.items));\n            if (getState().userPage.totalItemsCount === 0) {\n                dispatch(setTotalCountAC(data.totalCount));\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }\n};\n\n//double logical refactor\nconst _followUnfollowFlow = async (dispatch: DispatchType, userId: number, apiMethod: any, actionCreator: any) => {\n    try {\n        dispatch(followingInProgressAC(true, userId));\n        const data = await apiMethod(userId);\n        if (data.resultCode === 0) {\n            dispatch(actionCreator(userId));\n        }\n        dispatch(followingInProgressAC(false, userId));\n    } catch (e) {\n        console.error(e)\n    }\n};\n\n// export const followThunk = (userId: number) => {\n//     return (dispatch) => {\n//         dispatch(followingInProgressAC(true, userId));\n//         usersAPI.setUnfollow(userId: number).then((data) => {\n//             if (data.resultCode === 0) {\n//                 dispatch(unfollowAC(userId: number));\n//             }\n//             dispatch(followingInProgressAC(false, userId));\n//         });\n//     }\n// };\nexport const followThunk = (userId: number): ThunkType => {\n    return async (dispatch) => {\n        try {\n            await _followUnfollowFlow(dispatch, userId, usersAPI.setUnfollow.bind(usersAPI), unfollowAC);\n        } catch (e) {\n            console.error(e)\n        }\n    }\n};\n\n// export const unfollowThunk = (userId: number) => {\n//     return (dispatch) => {\n//         dispatch(followingInProgressAC(true, userId));\n//         usersAPI.setFollow(userId: number).then((data) => {\n//             if (data.resultCode === 0) {\n//                 dispatch(followAC(userId: number));\n//             }\n//             dispatch(followingInProgressAC(false, userId));\n//         });\n//     }\n// };\nexport const unfollowThunk = (userId: number): ThunkType => {\n    return async (dispatch) => {\n        try {\n            await _followUnfollowFlow(dispatch, userId, usersAPI.setFollow.bind(usersAPI), followAC);\n        } catch (e) {\n            console.error(e)\n        }\n    }\n};\n\n/**\n selectors\n **/\n\nexport const getUsersSelector = (state: stateType) => {\n    return state.userPage.users\n};\n\n// reselect example ->>>>\nconst getUsers = (state: stateType) => {\n    return state.userPage.users\n};\n\nexport const getUsersSelectorDifficult = createSelector(getUsers, (users) => {\n    users.filter((u: usersType) => {\n        return u\n    })\n});\n// <<<<- reselect example\n\nexport const getPageSizeSelector = (state: stateType) => {\n    return state.userPage.pageSize\n};\nexport const getTotalUsersCountSelector = (state: stateType) => {\n    return state.userPage.totalItemsCount\n};\nexport const getCurrentPageSelector = (state: stateType) => {\n    return state.userPage.currentPage\n};\nexport const getIsFetchingSelector = (state: stateType) => {\n    return state.userPage.isFetching\n};\nexport const getFollowingInProgressSelector = (state: stateType) => {\n    return state.userPage.followingInProgress\n};\n// export const getPortionSize = (state: stateType) => {\n//     return state.userPage.portionSize\n// };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preLoader\":\"Preloader_preLoader__2CbYd\"};","module.exports = __webpack_public_path__ + \"static/media/loader.bba5f526.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}