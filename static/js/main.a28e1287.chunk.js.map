{"version":3,"sources":["reducers/appReducer.js","redux/redux.js","serviceWorker.js","components/NavBar/SideBar/SideBar.js","components/NavBar/SideBar/SideBarContainer.js","components/NavBar/Navbar.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/HiApp/HiApp.js","hoc/withSuspense.js","App.js","AppContainer.js","index.js","reducers/authReducer.js","components/common/Preloader/Preloader.js","components/Header/Header.module.scss","components/NavBar/SideBar/SideBar.module.scss","components/NavBar/NavBar.module.scss","reducers/profileReducer.js","reducers/messagesReducer.js","api/api.js","utils/Helper/reducer-helper.js","reducers/UsersReducer.js","components/common/Preloader/Preloader.module.scss","assets/img/loader.svg","logo.svg"],"names":["INITIALIZED_SUCCESS","initialState","initialized","reducers","combineReducers","messagesPage","messagesReducer","profilePage","profileReducer","userPage","UsersReducer","auth","authReducer","form","formReducer","app","state","action","type","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","match","SideBar","props","dialogs","className","styles","sideBarWrapper","slice","map","item","key","id","sideBar","src","avatar","alt","name","SideBarContainer","connect","NavBar","nav","to","activeClassName","active","Header","header","logo","isFetching","Preloader","loginBlock","isAuth","enter","login","onClick","logoutThunk","HeaderContainer","this","Component","HiApp","style","display","height","justifyContent","alignContent","withSuspens","fallback","DialogsContainer","React","lazy","ProfileContainer","UsersContainer","LoginContainer","News","Music","Settings","App","exact","path","render","AppContainer","initializedAppThunk","dispatch","promise","authMeThunk","Promise","all","then","ReactDOM","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","SET_AUTH_USER_DATA","FETCH_DATA","email","payload","setAuthUserDataAC","a","authAPI","authMe","data","resultCode","loginThunk","password","rememberMe","loginMe","messageError","messages","length","stopSubmit","_error","logoutMe","preLoader","preloader","module","exports","ADD_POST_PROFILE","SET_USER_PROFILE","SET_USER_STATUS","DELETE_POST_PROFILE","posts","likeCounts","textArea","profile","status","addPostAC","post","setUserStatusAC","getUserProfileThunk","profileId","profileAPI","getProfile","getStatusThunk","userId","getStatus","updateStatusThunk","updateStatus","newPost","filter","postId","ADD_MESSAGE_DIALOG","addMessageAC","newMessage","instance","Axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","response","setFollow","setUnfollow","delete","paramsId","put","updateObjectInArray","arr","actionItemId","objPropName","newObjProp","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalItemsCount","followingInProgress","followed","totalCount","isProgress","followAC","unfollowAC","setCurrentPageAC","toggleIsFetchingAC","followingInProgressAC","getUsersThunk","getState","items","followUnfollowFlow","apiMethod","actionCreator","followThunk","bind","unfollowThunk","getUsersSelector","getPageSizeSelector","createSelector","u","getTotalUsersCountSelector","getCurrentPageSelector","getIsFetchingSelector","getFollowingInProgressSelector"],"mappings":"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","file":"static/js/main.a28e1287.chunk.js","sourcesContent":["import {authMeThunk} from \"./authReducer\";\n\nconst prefix = 'APP_';\n\nconst INITIALIZED_SUCCESS = `${prefix}INITIALIZED_SUCCESS`;\n\nconst initialState = {\n    initialized: false,\n};\n\nexport default function appReducer(state = initialState, action) {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true,\n            };\n        default:\n            return state\n    }\n}\n\nexport const initializedSuccessAC = () => {\n    return {\n        type: INITIALIZED_SUCCESS,\n    }\n};\n\nexport const initializedAppThunk = () => {\n    return (dispatch) => {\n        let promise = dispatch(authMeThunk());\n        Promise.all([promise]).then(() => {\n            dispatch(initializedSuccessAC())\n        })\n    }\n};","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport messagesReducer from \"../reducers/messagesReducer\";\nimport profileReducer from \"../reducers/profileReducer\";\nimport UsersReducer from \"../reducers/UsersReducer\";\nimport authReducer from \"../reducers/authReducer\";\nimport thunk from \"redux-thunk\";\nimport {reducer as formReducer} from 'redux-form'\nimport appReducer from \"../reducers/appReducer\";\n\nlet reducers = combineReducers({\n    messagesPage: messagesReducer,\n    profilePage: profileReducer,\n    userPage: UsersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer,\n});\n\n// const store = createStore(\n//    reducers, {},\n// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//  );\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware(thunk),\n    )\n);\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport styles from './SideBar.module.scss'\n\nconst SideBar = props => {\n    const {dialogs} = props;\n    return (\n        <div className={styles.sideBarWrapper}>\n            {dialogs.slice(0, 3).map((item) => {\n                return (\n                    <div key={item.id} className={styles.sideBar}>\n                        <img src={item.avatar} alt='avatar'/>\n                        <div>{item.name}</div>\n                    </div>\n                )\n            })}\n        </div>\n    );\n};\n\nexport default SideBar;","// import React from 'react';\nimport SideBar from './SideBar';\nimport {connect} from 'react-redux';\n\n// const SideBarContainer = props => {\n//     return (\n//         <ContextStore.Consumer>\n//             {(store) => {\n//                 return(\n//                     <SideBar dialogs={store.getState().messagesPage.dialogs}/>\n//                 )\n//             }}\n//         </ContextStore.Consumer>\n//     );\n// };\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogs: state.messagesPage.dialogs,\n    }\n};\n\nconst SideBarContainer = connect(mapStateToProps)(SideBar);\n\nexport default SideBarContainer;","import React from 'react';\nimport styles from './NavBar.module.scss'\nimport {NavLink} from 'react-router-dom';\nimport SideBarContainer from './SideBar/SideBarContainer';\n\nconst NavBar = (props) => {\n    return (\n        <nav className={styles.nav}>\n            <ul>\n                <li className={styles.item}><NavLink to='/profile' activeClassName={styles.active}>Profile</NavLink></li>\n                <li className={styles.item}><NavLink to='/dialogs' activeClassName={styles.active}>Messages</NavLink></li>\n                <li className={styles.item}><NavLink to='/users' activeClassName={styles.active}>Users</NavLink></li>\n                <li className={styles.item}><NavLink to='/news' activeClassName={styles.active}>News</NavLink></li>\n                <li className={styles.item}><NavLink to='/music' activeClassName={styles.active}>Music</NavLink></li>\n                <li className={styles.item}><NavLink to='/settings' activeClassName={styles.active}>Settings</NavLink></li>\n            </ul>\n            <div className={styles.sideBar}>\n                <span>Friends</span>\n                <SideBarContainer/>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;","import React from 'react';\nimport logo from '../../logo.svg';\nimport styles from './Header.module.scss'\nimport {NavLink} from \"react-router-dom\";\nimport Preloader from \"../common/Preloader/Preloader\";\n\nconst Header = (props) => {\n    return (\n        <header className={styles.header}>\n            <NavLink to={'/'}><img src={logo} alt='logo'/></NavLink>\n            {props.isFetching && <Preloader/>}\n            <div className={styles.loginBlock}>\n                {props.isAuth ?\n                    <div>\n                        <span className={styles.enter}>Вы вошли как:</span>\n                        {` ${props.login} `}\n                        <button onClick={props.logoutThunk}>Logout</button>\n                    </div>\n                    : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import React, {Component} from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logoutThunk} from \"../../reducers/authReducer\";\n\nclass HeaderContainer extends Component {\n\n    // componentDidMount(): void {\n    //     this.props.authMeThunk();\n    //     // this.props.isFetchingTrueAC(true);\n    //     //     API.authMe().then(data => {\n    //     //         if (data.resultCode === 0) {\n    //     //             const {id, email, login} = data.data;\n    //     //             this.props.setAuthUserDataAC(id, email, login)\n    //     //         }\n    //     //     })\n    // }\n\n    render() {\n        return (\n            <Header {...this.props}/>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        login: state.auth.login,\n        isAuth: state.auth.isAuth,\n        isFetching: state.auth.isFetching,\n    }\n};\n\nexport default connect(mapStateToProps, {\n    // authMeThunk,\n    logoutThunk,\n})(HeaderContainer);","import React from 'react';\n\nconst HiApp = () => {\n    return (\n        <div style={{\n            display: 'grid',\n            height: '100%',\n            justifyContent: 'center',\n            alignContent: 'center',\n        }}>\n            приветики, это приветствие\n        </div>\n    );\n};\n\nexport default HiApp;","import React, {Suspense} from 'react';\n\nexport const withSuspens = (Component) => {\n    return (props) => {\n        return (\n            <Suspense fallback={<div>Загрузка...</div>}>\n                <Component {...props}/>\n            </Suspense>\n        );\n    };\n};","import React, {Suspense} from 'react';\nimport './App.scss';\nimport NavBar from \"./components/NavBar/Navbar\";\nimport {Route} from \"react-router-dom\";\n// import News from \"./components/News/News\";\n// import Music from \"./components/Music/Music\";\n// import Settings from \"./components/Settings/Settings\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// import UsersContainer from \"./components/Users/UsersContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\n// import LoginContainer from \"./components/Login/LoginContainer\";\nimport HiApp from \"./components/HiApp/HiApp\";\nimport {withSuspens} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst LoginContainer = React.lazy(() => import('./components/Login/LoginContainer'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\n\nconst App = (props) => {\n    return (\n        <div className=\"App\">\n            <HeaderContainer/>\n            <NavBar/>\n            <div className=\"app-wrapper-content\">\n                <Route exact path='/' render={() => {\n                    return <HiApp/>\n                }}/>\n                <Route path='/dialogs' render={withSuspens(DialogsContainer)}/>\n                <Route path='/profile/:id?' render={withSuspens(ProfileContainer)}/>\n                <Route path='/users' render={withSuspens(UsersContainer)}/>\n                <Route path='/news' render={withSuspens(News)}/>\n                <Route path='/music' render={withSuspens(Music)}/>\n                <Route path='/settings' render={withSuspens(Settings)}/>\n                <Route path='/login' render={withSuspens(LoginContainer)}/>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {initializedAppThunk} from \"./reducers/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport App from \"./App\";\n\nclass AppContainer extends React.Component {\n\n    componentDidMount(): void {\n        this.props.initializedAppThunk();\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <App/>\n        );\n    }\n}\n\nexport default compose(\n    connect((state) => {\n        return {\n            initialized: state.app.initialized,\n        }\n    }, {\n        initializedAppThunk,\n    }),\n)(AppContainer);","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/redux\";\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport AppContainer from \"./AppContainer\";\n\n// const reRenderThree = (state) => {\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n// };\n\n// reRenderThree(store.getState());\n//\n// store.subscribe(() => {\n//     reRenderThree(store.getState())\n// });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst prefix = 'AUTH_';\n\nconst SET_AUTH_USER_DATA = `${prefix}SET_AUTH_USER_DATA`;\nconst FETCH_DATA = `${prefix}FETCH_DATA`;\n\nconst initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    isFetching: false,\n};\n\nexport default function authReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_AUTH_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n                isFetching: false,\n            };\n        case FETCH_DATA:\n            return {\n                ...state,\n                isFetching: action.payload.isFetching,\n            };\n        default:\n            return state\n    }\n}\n\nexport const setAuthUserDataAC = (id, email, login, isAuth) => {\n    return {\n        type: SET_AUTH_USER_DATA,\n        payload: {\n            id, email, login, isAuth,\n        }\n    }\n};\n\nexport const isFetchingTrueAC = (boolean) => {\n    return {\n        type: FETCH_DATA,\n        payload: {\n            isFetching: boolean\n        }\n    }\n};\n\n// export const authMeThunk = () => {\n//     return (dispatch, getState) => {\n//         dispatch(isFetchingTrueAC(true));\n//         return authAPI.authMe().then(data => {\n//             if (data.resultCode === 0) {\n//                 const {id, email, login} = data.data;\n//                 dispatch(setAuthUserDataAC(id, email, login, true,))\n//             }\n//         });\n//     }\n// };\n\nexport const authMeThunk = () => {\n    return async (dispatch) => {\n        dispatch(isFetchingTrueAC(true));\n        const data = await authAPI.authMe();\n        if (data.resultCode === 0) {\n            const {id, email, login} = data.data;\n            dispatch(setAuthUserDataAC(id, email, login, true,))\n        }\n        return data;\n    }\n};\n\n// export const loginThunk = (email, password, rememberMe) => {\n//     return (dispatch, getState) => {\n//         authAPI.loginMe(email, password, rememberMe, true).then(data => {\n//             if (data.resultCode === 0) {\n//                 dispatch(authMeThunk())\n//             } else {\n//                 let messageError = data.messages.length > 0 ? data.messages[0] : 'Some error';\n//                 dispatch(stopSubmit('login', {\n//                     _error: messageError,\n//                 }))\n//             }\n//         })\n//     }\n// };\n\nexport const loginThunk = (email, password, rememberMe) => {\n    return async (dispatch) => {\n        const data = await authAPI.loginMe(email, password, rememberMe, true);\n        if (data.resultCode === 0) {\n            dispatch(authMeThunk())\n        } else {\n            let messageError = data.messages.length > 0 ? data.messages[0] : 'Some error';\n            dispatch(stopSubmit('login', {\n                _error: messageError,\n            }))\n        }\n    }\n};\n\n// export const logoutThunk = () => {\n//     return (dispatch, getState) => {\n//         authAPI.logoutMe().then(data => {\n//             if (data.resultCode === 0) {\n//                 dispatch(setAuthUserDataAC(null, null, null, false))\n//             }\n//         })\n//     }\n// };\n\nexport const logoutThunk = () => {\n    return async (dispatch) => {\n        const data = await authAPI.logoutMe();\n        if (data.resultCode === 0) {\n            dispatch(setAuthUserDataAC(null, null, null, false))\n        }\n    }\n};","import React from 'react';\nimport styles from \"./Preloader.module.scss\";\nimport preloader from '../../../assets/img/loader.svg'\n\nconst Preloader = props => {\n    return (\n        <div className={styles.preLoader}>\n            <img src={preloader} alt='preloader'/>\n        </div>\n    );\n};\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"loginBlock\":\"Header_loginBlock__3g_eP\",\"enter\":\"Header_enter__2ni9x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBarWrapper\":\"SideBar_sideBarWrapper__3qIql\",\"sideBar\":\"SideBar_sideBar__3jBF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__2RS83\",\"item\":\"NavBar_item__WEh28\",\"active\":\"NavBar_active__3Tb7-\",\"sideBar\":\"NavBar_sideBar__FBsiD\"};","import {profileAPI} from \"../api/api\";\n\n// action constants\nconst prefix = 'PROFILE_';\n\nconst ADD_POST_PROFILE = `${prefix}ADD_POST_PROFILE`;\nconst SET_USER_PROFILE = `${prefix}SET_USER_PROFILE`;\nconst SET_USER_STATUS = `${prefix}SET_USER_STATUS`;\nconst DELETE_POST_PROFILE = `${prefix}DELETE_POST_PROFILE`;\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'My post 1', likeCounts: '3'},\n        {id: 2, message: 'My secondary post', likeCounts: '5'},\n        {id: 3, message: 'My third post', likeCounts: '25'},\n    ],\n    textArea: '',\n    profile: null,\n    status: 'Ваш статус',\n};\n\n//reducer\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case ADD_POST_PROFILE:\n            let newPost = {\n                id: state.posts.length + 1,\n                message: action.payload.post,\n                likeCounts: 0,\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n            };\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.payload.profile,\n            };\n        case SET_USER_STATUS:\n            return {\n                ...state,\n                status: action.payload.status\n            };\n        case DELETE_POST_PROFILE:\n            return {\n                ...state,\n                posts: state.posts.filter(post => {\n                    return post.id !== action.payload.postId\n                })\n            };\n        default:\n            return state\n    }\n};\n\n//action creator\n\nexport const addPostAC = (post) => {\n    return {\n        type: ADD_POST_PROFILE,\n        payload: {\n            post,\n        }\n\n    }\n};\n\nexport const deletePostAC = (postId) => {\n    return {\n        type: DELETE_POST_PROFILE,\n        payload: {\n            postId,\n        },\n    }\n};\n\nexport const setUserProfileAC = (profile) => {\n    return {\n        type: SET_USER_PROFILE,\n        payload: {\n            profile,\n        }\n    }\n};\n\nexport const setUserStatusAC = (status) => {\n    return {\n        type: SET_USER_STATUS,\n        payload: {\n            status,\n        },\n    }\n};\n\n//middleware\n\n// export const getUserProfileThunk = (profileId) => {\n//     return (dispatch) => {\n//         profileAPI.getProfile(profileId).then(data => {\n//             dispatch(setUserProfileAC(data))\n//         })\n//     }\n// };\nexport const getUserProfileThunk = (profileId) => {\n    return async (dispatch) => {\n        const data = await profileAPI.getProfile(profileId);\n        dispatch(setUserProfileAC(data))\n    }\n};\n\n// export const getStatusThunk = (userId) => {\n//     return (dispatch) => {\n//         profileAPI.getStatus(userId).then(data => {\n//             if (data) {\n//                 dispatch(setUserStatusAC(data))\n//             }\n//         })\n//     }\n// };\nexport const getStatusThunk = (userId) => {\n    return async (dispatch) => {\n        const data = await profileAPI.getStatus(userId);\n        if (data) {\n            dispatch(setUserStatusAC(data))\n        }\n    }\n};\n\n// export const updateStatusThunk = (status) => {\n//     return (dispatch) => {\n//         profileAPI.updateStatus(status).then(data => {\n//             if (data.resultCode === 0) {\n//                 dispatch(setUserStatusAC(status));\n//             }\n//         })\n//     }\n// };\nexport const updateStatusThunk = (status) => {\n    return async (dispatch) => {\n        const data = profileAPI.updateStatus(status);\n        if (data.resultCode === 0) {\n            dispatch(setUserStatusAC(status));\n        }\n    }\n};\n\nexport default profileReducer;","const prefix = 'MESSAGES_';\n\nconst ADD_MESSAGE_DIALOG = `${prefix}ADD_MESSAGE_DIALOG`;\n\nlet initialState = {\n    messages: [\n        {id: 1, message: 'Привет как дела'},\n        {id: 2, message: 'У меня нормич'},\n        {id: 3, message: 'А у тебя?'},\n        {id: 4, message: 'все по феншую'},\n    ],\n    dialogs: [\n        {\n            id: '1',\n            name: 'Andre',\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTLCMHxa7MfSl3vH9hQDDgUwFpORGANIRLpP2t8Pax3IqljrYHZ&usqp=CAU'\n        },\n        {\n            id: '2',\n            name: 'Dimka',\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTtYsA5m3xp8EdW0R1vT5Oein32vpgXbFZ6NkB23lbuDxjZwedh&usqp=CAU'\n        },\n        {id: '3', name: 'Nikolay', avatar: 'https://i.ytimg.com/vi/WJMp9NtK4io/hqdefault.jpg'},\n        {\n            id: '4',\n            name: 'Arseniy',\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcShIt3l2-355Sf6La3bZUy7lvRj6vDzjhWQfW1uNHWYxwRNcwzY&usqp=CAU'\n        },\n    ],\n};\n\nconst messagesReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_MESSAGE_DIALOG: {\n            let newMessage = {id: state.messages.length + 1, message: action.payload.message,};\n            return {\n                ...state,\n                messages: [...state.messages, newMessage],\n            }\n        }\n        default:\n            return state\n    }\n};\n\nexport const addMessageAC = (message) => {\n    return {\n        type: ADD_MESSAGE_DIALOG,\n        payload: {\n            message\n        }\n    }\n};\n\nexport default messagesReducer;","import Axios from \"axios\";\n\nconst instance = Axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": '3dec519a-9ed9-4d00-a8c6-4541a128800e',\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage, pageSize) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,)\n            .then((response) => {\n                return response.data\n            })\n    },\n\n    setFollow(userId) {\n        return instance.post(`https://social-network.samuraijs.com/api/1.0/follow/${userId}`)\n            .then(response => response.data)\n    },\n\n    setUnfollow(userId) {\n        return instance.delete(`https://social-network.samuraijs.com/api/1.0/follow/${userId}`)\n            .then(response => response.data)\n    },\n};\n\nexport const authAPI = {\n    authMe() {\n        return instance.get(`auth/me`)\n            .then(response => response.data)\n    },\n    loginMe(email, password, rememberMe = false) {\n        return instance.post('auth/login', {email, password, rememberMe})\n            .then(response => response.data)\n    },\n    logoutMe() {\n        return instance.delete('auth/login')\n            .then(response => response.data )\n    },\n};\n\nexport const profileAPI = {\n    getProfile(paramsId) {\n        return instance.get(`profile/${paramsId}`)\n            .then(response => response.data)\n    },\n    getStatus(userId) {\n        return instance.get(`/profile/status/${userId || 2}`)\n            .then(response => response.data)\n    },\n    updateStatus(status) {\n        return instance.put(`/profile/status/`, {status: status})\n            .then(response => response.data)\n    }\n};","export const updateObjectInArray = (arr, actionItemId, objPropName, newObjProp) => {\n   return arr.map((item) => {\n        if (item[objPropName] === actionItemId) {\n            return {...item, ...newObjProp,}\n        }\n        return item\n    })\n};","import {usersAPI} from \"../api/api\";\nimport {createSelector} from 'reselect'\nimport {updateObjectInArray} from \"../utils/Helper/reducer-helper\";\n\nconst prefix = 'USERS_';\n\nconst FOLLOW = `${prefix}FOLLOW`;\nconst UNFOLLOW = `${prefix}UNFOLLOW`;\nconst SET_USERS = `${prefix}SET_USERS`;\nconst SET_CURRENT_PAGE = `${prefix}SET_CURRENT_PAGE`;\nconst SET_TOTAL_COUNT = `${prefix}SET_TOTAL_COUNT`;\nconst TOGGLE_IS_FETCHING = `${prefix}TOGGLE_IS_FETCHING`;\nconst TOGGLE_IS_FOLLOWING_PROGRESS = `${prefix}TOGGLE_IS_FOLLOWING_PROGRESS`;\n\nconst initialState = {\n    users: [],\n    pageSize: 6,\n    totalItemsCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [],\n    // portionSize: 10,\n};\n\nexport default function UsersReducer(state = initialState, action) {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.payload.userId, 'id', {followed: true})\n                // users: state.users.map((user) => {\n                //     if (user.id === action.payload.userId) {\n                //         return {...user, followed: true,}\n                //     }\n                //     return user\n                // })\n            };\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.payload.userId, 'id', {followed: false})\n                // users: state.users.map((user) => {\n                //     if (user.id === action.payload.userId) {\n                //         return {...user, followed: false,}\n                //     }\n                //     return user\n                // })\n            };\n        case SET_USERS:\n            return {\n                ...state,\n                users: action.payload.users,\n            };\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.payload.currentPage,\n            };\n        case SET_TOTAL_COUNT:\n            return {\n                ...state,\n                totalItemsCount: action.payload.totalCount,\n            };\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.payload.isFetching,\n            };\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.payload.isProgress ?\n                    [...state.followingInProgress, action.payload.userId]\n                    : [state.followingInProgress.filter(userId => {\n                        return userId !== action.payload.userId\n                    })]\n            };\n        default:\n            return state\n    }\n}\n\nexport const followAC = (userId) => {\n    return {\n        type: FOLLOW,\n        payload: {\n            userId,\n        },\n    }\n};\n\nexport const unfollowAC = (userId) => {\n    return {\n        type: UNFOLLOW,\n        payload: {\n            userId,\n        },\n    }\n};\n\nexport const setUsersAC = (users) => {\n    return {\n        type: SET_USERS,\n        payload: {\n            users,\n        },\n    }\n};\n\nexport const setCurrentPageAC = (currentPage) => {\n    return {\n        type: SET_CURRENT_PAGE,\n        payload: {\n            currentPage\n        }\n    }\n};\n\nexport const setTotalCountAC = (totalCount) => {\n    return {\n        type: SET_TOTAL_COUNT,\n        payload: {\n            totalCount\n        }\n    }\n};\n\nexport const toggleIsFetchingAC = (isFetching) => {\n    return {\n        type: TOGGLE_IS_FETCHING,\n        payload: {\n            isFetching,\n        }\n    }\n};\n\nexport const followingInProgressAC = (isProgress, userId) => {\n    return {\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\n        payload: {\n            isProgress,\n            userId,\n        }\n    }\n};\n\n//middleware\n\n// export const getUsersThunk = (currentPage, pageSize) => {\n//     return (dispatch, getState) => {\n//         dispatch(toggleIsFetchingAC(true));\n//         dispatch(setCurrentPageAC(currentPage));\n//         usersAPI.getUsers(currentPage, pageSize).then((data) => {\n//             dispatch(toggleIsFetchingAC(false));\n//             dispatch(setUsersAC(data.items));\n//             if (getState().userPage.totalItemsCount === 0) {\n//                 dispatch(setTotalCountAC(data.totalCount));\n//             }\n//         });\n//     }\n// };\nexport const getUsersThunk = (currentPage, pageSize) => {\n    return async (dispatch, getState) => {\n        dispatch(toggleIsFetchingAC(true));\n        dispatch(setCurrentPageAC(currentPage));\n        const data = await usersAPI.getUsers(currentPage, pageSize);\n        dispatch(toggleIsFetchingAC(false));\n        dispatch(setUsersAC(data.items));\n        if (getState().userPage.totalItemsCount === 0) {\n            dispatch(setTotalCountAC(data.totalCount));\n        }\n    }\n};\n\n//double logical refactor\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(followingInProgressAC(true, userId));\n    const data = await apiMethod(userId);\n    if (data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(followingInProgressAC(false, userId));\n};\n\n// export const followThunk = (userId) => {\n//     return (dispatch) => {\n//         dispatch(followingInProgressAC(true, userId));\n//         usersAPI.setUnfollow(userId).then((data) => {\n//             if (data.resultCode === 0) {\n//                 dispatch(unfollowAC(userId));\n//             }\n//             dispatch(followingInProgressAC(false, userId));\n//         });\n//     }\n// };\nexport const followThunk = (userId) => {\n    return async (dispatch) => {\n        await followUnfollowFlow(dispatch, userId, usersAPI.setUnfollow.bind(usersAPI), unfollowAC);\n    }\n};\n\n// export const unfollowThunk = (userId) => {\n//     return (dispatch) => {\n//         dispatch(followingInProgressAC(true, userId));\n//         usersAPI.setFollow(userId).then((data) => {\n//             if (data.resultCode === 0) {\n//                 dispatch(followAC(userId));\n//             }\n//             dispatch(followingInProgressAC(false, userId));\n//         });\n//     }\n// };\nexport const unfollowThunk = (userId) => {\n    return async (dispatch) => {\n        await followUnfollowFlow(dispatch, userId, usersAPI.setFollow.bind(usersAPI), followAC);\n    }\n};\n\n/**\n selectors\n **/\n\nexport const getUsersSelector = (state) => {\n    return state.userPage.users\n};\n\n// reselect example ->>>>\nconst getUsers = (state) => {\n    return state.userPage.users\n};\n\nexport const getUsersSelectorDifficult = createSelector(getUsers, (users) => {\n    users.filter(u => {\n        return u\n    })\n});\n// <<<<- reselect example\n\nexport const getPageSizeSelector = (state) => {\n    return state.userPage.pageSize\n};\nexport const getTotalUsersCountSelector = (state) => {\n    return state.userPage.totalItemsCount\n};\nexport const getCurrentPageSelector = (state) => {\n    return state.userPage.currentPage\n};\nexport const getIsFetchingSelector = (state) => {\n    return state.userPage.isFetching\n};\nexport const getFollowingInProgressSelector = (state) => {\n    return state.userPage.followingInProgress\n};\n// export const getPortionSize = (state) => {\n//     return state.userPage.portionSize\n// };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preLoader\":\"Preloader_preLoader__2CbYd\"};","module.exports = __webpack_public_path__ + \"static/media/loader.bba5f526.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}