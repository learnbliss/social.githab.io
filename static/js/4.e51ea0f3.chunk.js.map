{"version":3,"sources":["components/common/FormsControl/FormsControl.js","components/common/FormsControl/FormsControl.module.scss","utils/validators/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Login/LoginForm/LoginForm.module.scss","components/Profile/ProfileData/ProfileData.module.scss","components/Profile/Profile.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","assets/img/defaulAvatar.png","components/Profile/ProfileStatus/ProfileStatus.module.scss","components/Profile/Contacts/Contacts.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/PostItem/PostItem.module.scss","components/Profile/ProfileStatus/ProfileStatusHOOKS.js","components/Profile/Contacts/Contacts.js","components/Profile/ProfileData/ProfileData.js","components/Profile/ProfileDataForm/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/PostItem/PostItem.js","components/Profile/MyPosts/PostForm/PostForm.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["TextArea","input","meta","props","hasError","touched","error","className","styles","formControl","CustomInput","module","exports","required","value","maxLengthCreator","maxLength","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusHOOKS","useState","editMode","setEditMode","status","setStatus","useEffect","root","onDoubleClick","autoFocus","onBlur","updateStatusThunk","onChange","e","target","Contacts","contactKey","contactValue","contacts","href","rel","ProfileData","description","isOwner","onClick","activeEditMode","profile","fullName","aboutMe","lookingForAJobDescription","lookingForAJob","role","aria-label","keys","map","key","reduxForm","form","onSubmit","handleSubmit","stylesError","formSummaryError","Field","component","name","validate","type","placeholder","ProfileInfo","Preloader","descriptionBlock","isFetching","avatar","src","photos","large","defaultAvatar","alt","customInput","files","savePhoto","initialValues","profileData","updateProfile","PostItem","postItem","message","likeCounts","maxLength10","React","memo","posts","post","addPost","item","id","MyPostContainer","connect","state","profilePage","textArea","dispatch","addPostAC","MyPosts","Profile","content","ProfileContainer","refreshProfile","userId","match","params","authUserId","history","getUserProfileThunk","getStatusThunk","this","prevProps","prevState","snapshot","savePhotoThunk","updateProfileThunk","Component","compose","auth","withRouter"],"mappings":"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","file":"static/js/4.e51ea0f3.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from './FormsControl.module.scss'\n\nexport const TextArea = ({input, meta, ...props}) => {\n\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={styles.formControl + \" \" + (hasError && styles.error)}>\n            <textarea {...input} {...props}/>\n            {hasError &&\n            <div>\n                <span>{meta.error}</span>\n            </div>}\n        </div>\n    )\n};\n\nexport const CustomInput = ({input, meta, ...props}) => {\n\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={styles.formControl + \" \" + (hasError && styles.error)}>\n            <input {...input} {...props}/>\n            {hasError &&\n            <div>\n                <span>{meta.error}</span>\n            </div>}\n        </div>\n    )\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__wuZVb\",\"error\":\"FormsControl_error___gyw5\"};","export const required = (value) => {\n    if (value) {\n        return undefined\n    }\n    return 'Field is required'\n};\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) {\n        return `Max length is ${maxLength} symbols`;\n    }\n    return undefined\n};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"LoginForm_loginForm__2odaZ\",\"formSummaryError\":\"LoginForm_formSummaryError__2dNse\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileData_description__1p_rx\",\"contacts\":\"ProfileData_contacts__33nP0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2LnEi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__gOOQY\",\"background\":\"ProfileInfo_background__2_k_Q\",\"avatar\":\"ProfileInfo_avatar__2z4QN\",\"customInput\":\"ProfileInfo_customInput__TLifv\"};","module.exports = __webpack_public_path__ + \"static/media/defaulAvatar.c5c7939f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProfileStatus_root__37sGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts___jZjH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__120gb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"PostItem_postItem__2pnSC\"};","import React, {useEffect, useState} from 'react';\nimport styles from './ProfileStatus.module.scss'\n\nconst ProfileStatusHOOKS = (props) => {\n\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatusThunk(status);\n    };\n\n    const changeStatus = (e) => {\n        setStatus(e.target.value)\n    };\n\n    return (\n        <div className={styles.root}>\n            {!editMode &&\n            <div>\n                <span onDoubleClick={activateEditMode}>{props.status}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input autoFocus={true}\n                       onBlur={deactivateEditMode}\n                       value={status}\n                       onChange={changeStatus}/>\n            </div>\n            }\n        </div>\n    );\n};\n\nexport default ProfileStatusHOOKS;","import React from 'react';\nimport styles from './Contacts.module.scss';\n\nconst Contacts = (props) => {\n    const {contactKey, contactValue} = props;\n    return (\n        <div className={styles.contacts}>\n            <div><b>{contactKey}</b></div>\n            <div><a href={contactValue} target={'_blank'}\n                    rel={'noopener noreferrer'}>{contactValue}</a></div>\n        </div>\n    );\n};\n\nexport default Contacts;","import React from 'react';\nimport styles from \"./ProfileData.module.scss\";\nimport Contacts from \"../Contacts/Contacts\";\n\nconst ProfileData = (props) => {\n    return (\n        <div className={styles.description}>\n            {props.isOwner &&\n            <div>\n                <button onClick={props.activeEditMode}>Edit personal info</button>\n            </div>}\n            <div><b>Имя:</b> {props.profile.fullName}</div>\n            <div><b>Слоган:</b> {props.profile.aboutMe}</div>\n            <div><b>Ищете ли вы\n                работу:</b> {props.profile.lookingForAJobDescription} {props.profile.lookingForAJob ?\n                <span role=\"img\" aria-label=\"smile\">&#x1f603;</span> :\n                <span role=\"img\" aria-label=\"smile\">&#x1f645;</span>}</div>\n            <div><b>Контакты:</b></div>\n            <div className={styles.contacts}>\n                {Object.keys(props.profile.contacts).map(key => {\n                    return <Contacts key={key} contactKey={key} contactValue={props.profile.contacts[key]}/>\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default ProfileData;","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport styles from \"../ProfileData/ProfileData.module.scss\";\nimport stylesError from '../../Login/LoginForm/LoginForm.module.scss'\nimport {CustomInput, TextArea} from \"../../common/FormsControl/FormsControl\";\n\nconst ProfileDataForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}\n              className={styles.description}>\n            <div>\n                <button>Save personal info</button>\n            </div>\n            {props.error && (\n                <div className={stylesError.formSummaryError}>\n                    {props.error}\n                </div>\n            )}\n            <div><b>Имя: </b>\n                <Field component={CustomInput}\n                       name=\"fullName\"\n                       validate={[]}/>\n            </div>\n            <div><b>Слоган: </b>\n                <Field component={TextArea}\n                       name=\"aboutMe\"\n                       validate={[]}/>\n            </div>\n            <div><b>Ищете ли вы работу: </b>\n                <Field component={'input'}\n                       name=\"lookingForAJob\"\n                       validate={[]}\n                       type=\"checkbox\"\n                       placeholder=\"\"/>\n                <Field component={TextArea}\n                       name=\"lookingForAJobDescription\"\n                       validate={[]}/>\n                {props.profile.lookingForAJob ?\n                    <span role=\"img\" aria-label=\"smile\">&#x1f603;</span> :\n                    <span role=\"img\" aria-label=\"smile\">&#x1f645;</span>}</div>\n            <div><b>Контакты:</b></div>\n            {Object.keys(props.profile.contacts).map(key => {\n                // return <Contacts key={key} contactKey={key} contactValue={props.profile.contacts[key]}/>\n                return (\n                    <div className={styles.contacts} key={key}>\n                        <div><b>{key} :</b></div>\n                        <Field component={CustomInput}\n                               name={`contacts.${key}`}\n                               validate={[]}\n                               type=\"text\"\n                               placeholder={key}/>\n                    </div>)\n            })}\n        </form>\n    );\n};\n\nexport default reduxForm({\n    form: 'editProfile'\n})(ProfileDataForm);","import React, {useEffect, useState} from 'react';\nimport styles from './ProfileInfo.module.scss'\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport defaultAvatar from '../../../assets/img/defaulAvatar.png'\nimport ProfileStatusHOOKS from \"../ProfileStatus/ProfileStatusHOOKS\";\nimport ProfileData from \"../ProfileData/ProfileData\";\nimport ProfileDataForm from \"../ProfileDataForm/ProfileDataForm\";\n\nconst ProfileInfo = props => {\n\n    const [editMode, setEditMode] = useState(false);\n\n    useEffect(() => {\n        setEditMode(false)\n    }, [props.profile]);\n\n    if (!props.profile) {\n        return <Preloader/>\n    }\n    const onAvatarPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            props.savePhoto(e.target.files[0]);\n        }\n    };\n\n    const activeEditMode = () => {\n        setEditMode(true)\n    };\n\n    const updateProfile = (profileData) => {\n        props.updateProfile(profileData)\n    };\n\n    return (\n        <div>\n            <div>\n                <ProfileStatusHOOKS status={props.status} updateStatusThunk={props.updateStatusThunk}/>\n            </div>\n            <div className={styles.descriptionBlock}>\n                {props.isFetching ? <Preloader/> :\n                    <div className={styles.avatar}>\n                        <img src={props.profile.photos.large || defaultAvatar} alt={'avatar'}/>\n                        {props.isOwner && <label className={styles.customInput}>\n                            Загрузить фото\n                            <input type={'file'}\n                                   onChange={onAvatarPhotoSelected}/>\n                        </label>}\n                    </div>}\n                {editMode ?\n                    <ProfileDataForm initialValues={props.profile}\n                                     profile={props.profile}\n                                     onSubmit={updateProfile}/> :\n                    <ProfileData profile={props.profile}\n                                 isOwner={props.isOwner}\n                                 activeEditMode={activeEditMode}/>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default ProfileInfo;","import React from 'react';\nimport styles from './PostItem.module.scss'\n\nconst PostItem = (props) => {\n    return (\n        <div className={styles.postItem}>\n            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTWg5WVlh52LLDsOq81XQPJoAxo1bPvCv23piy62w88gebxx9vM&usqp=CAU' alt={'avatar'}/>\n            {props.message}\n            <div>\n                <span>{props.likeCounts} Like</span>\n            </div>\n        </div>\n    );\n};\n\nexport default PostItem;","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\nimport {TextArea} from \"../../../common/FormsControl/FormsControl\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst PostForm = props => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={TextArea}\n                       name=\"post\"\n                       validate={[required, maxLength10]}/>\n            </div>\n            <div>\n                <button>add post</button>\n            </div>\n        </form>\n    );\n};\n\nexport default reduxForm({\n    form: 'post'\n})(PostForm);","import React from 'react';\nimport styles from './MyPosts.module.scss'\nimport PostItem from './PostItem/PostItem';\nimport PostForm from \"./PostForm/PostForm\";\n\nfunction MyPosts(props) {\n    const {posts} = props;\n\n    const addPost = (post) => {\n        props.addPost(post.post)\n    };\n    return (\n        <div className={styles.post}>\n            <h3>my post</h3>\n            <PostForm onSubmit={addPost}/>\n            {posts.map((item) => {\n                return (\n                    <PostItem key={item.id} message={item.message} likeCounts={item.likeCounts}/>\n                )\n            })}\n        </div>\n    );\n}\n\nexport default React.memo(MyPosts);","// import React from 'react';\nimport MyPosts from './MyPosts';\nimport {addPostAC} from '../../../reducers/profileReducer';\nimport {connect} from 'react-redux';\n\n// const MyPostContainer = () => {\n//     return (\n//         <ContextStore.Consumer>\n//             {(store) => {\n//                 const pushDataToStatePost = (text) => {\n//                     store.dispatch(pushDataToStateProFileAC(text))\n//                 };\n//                 const addPost = () => {\n//                     store.dispatch(addPostAC())\n//                 };\n//                 return (\n//                     <MyPosts pushDataToStatePost={pushDataToStatePost} addPost={addPost}\n//                              posts={store.getState().profilePage.posts}\n//                              textArea={store.getState().profilePage.textArea}/>\n//                 )\n//             }}\n//         </ContextStore.Consumer>\n//     );\n// };\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        textArea: state.profilePage.textArea,\n    }\n};\n\nconst mapStateToDispatch = (dispatch) => {\n    return {\n        addPost: (post) => {\n            dispatch(addPostAC(post))\n        },\n    }\n};\n\nconst MyPostContainer = connect(mapStateToProps, mapStateToDispatch)(MyPosts);\n\nexport default MyPostContainer;","import React from 'react';\nimport styles from './Profile.module.scss'\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostContainer from './MyPosts/MyPostContainer';\n\nconst Profile = (props) => {\n    return (\n        <div className={styles.content}>\n            <ProfileInfo profile={props.profile}\n                         status={props.status}\n                         updateStatusThunk={props.updateStatusThunk}\n                         isOwner={props.isOwner}\n                         savePhoto={props.savePhoto}\n                         isFetching={props.isFetching}\n                         updateProfile={props.updateProfile}/>\n            <MyPostContainer/>\n        </div>\n    );\n};\n\nexport default Profile;","import React, {Component} from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {\n    getStatusThunk,\n    getUserProfileThunk,\n    savePhotoThunk,\n    updateProfileThunk,\n    updateStatusThunk\n} from \"../../reducers/profileReducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends Component {\n\n    refreshProfile = () => {\n        let userId = this.props.match.params.id;\n        if (!this.props.match.params.id) {\n            userId = this.props.authUserId;\n            if (!userId) {\n               return this.props.history.push('/login')\n            }\n        }\n        this.props.getUserProfileThunk(userId);\n        this.props.getStatusThunk(userId)\n    };\n\n    componentDidMount() {\n        this.refreshProfile();\n        // API.getProfile(this.props.match.params.id).then(data => {\n        //     this.props.setUserProfileAC(data)\n        // })\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.match.params.id !== this.props.match.params.id) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     status={this.props.status}\n                     updateStatusThunk={this.props.updateStatusThunk}\n                     isOwner={!this.props.match.params.id}\n                     savePhoto={this.props.savePhotoThunk}\n                     updateProfile={this.props.updateProfileThunk}/>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authUserId: state.auth.id,\n        isFetching: state.profilePage.isFetching,\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {\n        getUserProfileThunk,\n        getStatusThunk,\n        updateStatusThunk,\n        savePhotoThunk,\n        updateProfileThunk,\n    }),\n    withRouter,\n    // widthAuthRedirect,\n)(ProfileContainer)\n\n// export default widthAuthRedirect(withRouter(connect(mapStateToProps, {\n//     getUserProfileThunk,\n// })(ProfileContainer)));"],"sourceRoot":""}